{"version":3,"sources":["actions/actions.js","reducers/reducers.js","components/nav-bar/nav-bar.jsx","components/movie-card/movie-card.jsx","components/movies-list/movies-list.jsx","components/login-view/login-view.jsx","components/movie-view/movie-view.jsx","components/registration-view/registration-view.jsx","components/genre-view/genre-view.jsx","components/director-view/director-view.jsx","components/profile-view/change-password.jsx","components/profile-view/edit-profile.jsx","components/profile-view/profile-view.jsx","components/main-view/main-view.jsx","App.js","serviceWorker.js","index.js"],"names":["SET_MOVIES","SORT_AZ","SORT_ZA","SORT_DIRECTOR","SORT_GENRE","SORT_ID","SET_USER","SEARCH_BAR_VISIBLE","SEARCH_VALUE","setMovies","value","type","setUser","newValue","Object","objectSpread","Password","localStorage","clear","setItem","JSON","stringify","getMovies","dispatch","axios","get","headers","Authorization","concat","token","then","response","data","movies","catch","err","console","error","removeMovieFromFavorites","movieId","delete","parse","user","Username","moviesApp","combineReducers","state","arguments","length","undefined","action","toConsumableArray","sort","a","b","_id","toUpperCase","Title","Director","Name","Genre","searchBarVisible","searchValue","mapDispatchToProps","makeSearch","sortAZ","sortZA","sortDirector","sortGenre","sortId","connect","props","_useState","useState","_useState2","slicedToArray","searchInput","setSearchInput","react_default","createElement","Navbar_default","sticky","bg","variant","Nav_default","react_router_dom","className","to","onClick","Form_default","onSubmit","e","preventDefault","Control","onChange","target","Dropdown_default","Toggle","id","Menu","Item","Button_default","size","window","open","movie","style","color","textDecoration","Card_default","Img","src","ImagePath","Body","FavoriteMovies","indexOf","Text","Description","useEffect","moviesToShow","filter","toLowerCase","includes","toLocaleLowerCase","Container_default","Row_default","map","Col_default","key","xl","sm","md","xs","movie_card_movie_card","Alert_default","loginUser","username","password","post","setUsername","_useState3","_useState4","setPassword","Group","controlId","Label","placeholder","addMovieToFavorites","find","RegistrationView","_useState5","_useState6","email","setEmail","_useState7","_useState8","birthday","setBirthday","Email","Birthday","genre","setGenre","ListGroup_default","director","setDirector","directorName","Bio","ChangePassword","isOpen","setIsOpen","oldPassword","setOldpassword","newPassword","setNewPassword","newPasswordRepeat","setNewPasswordRepeat","submitChange","patch","OldPassword","NewPassword","log","Fragment","Collapse_default","in","field","EditProfile","userInput","setUserInput","updateUser","deleteAccount","callback","config","mov","favMov","react_router","accessToken","getItem","nav_bar_nav_bar","fluid","exact","path","render","movies_list","profile_view_profile_view","_ref","match","movie_view_movie_view","params","Id","_ref2","genre_view_genre_view","_ref3","director_view_director_view","login_view_login_view","store","createStore","applyMiddleware","thunk","App","react_redux_es","main_view_main_view","Component","Boolean","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6412d1af.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const SET_MOVIES = 'SET_MOVIES';\nexport const SORT_AZ = 'SORT_AZ';\nexport const SORT_ZA = 'SORT_ZA';\nexport const SORT_DIRECTOR = 'SORT_DIRECTOR';\nexport const SORT_GENRE = 'SORT_GENRE';\nexport const SORT_ID = 'SORT_ID';\nexport const SET_USER = 'SET_USER';\nexport const SET_FILTER = 'SET_FILTER';\nexport const SET_SORT_COLUMN = 'SET_SORT_COLUMN';\nexport const SEARCH_BAR_VISIBLE = 'SEARCH_BAR_VISIBLE';\nexport const SEARCH_VALUE = 'SEARCH_VALUE';\n\n\n// Normal actions\nexport const setMovies = (value) => {\n    return { type: SET_MOVIES, value };\n}\n\nexport const sortAZ = () => {\n    return { type: SORT_AZ };\n}\n\nexport const sortZA = () => {\n    return { type: SORT_ZA };\n}\n\nexport const sortDirector = () => {\n    return { type: SORT_DIRECTOR };\n}\n\nexport const sortGenre = () => {\n    return { type: SORT_GENRE };\n}\n\nexport const sortId = () => {\n    return { type: SORT_ID };\n}\n\nexport const setUser = (value) => {\n    let newValue = {...value};\n    delete newValue.Password;\n    if (value === '') {\n        localStorage.clear();\n    } else {\n        localStorage.setItem('user', JSON.stringify(newValue));\n    };\n    return { type: SET_USER, newValue };\n}\n\nexport const setSortColumn = (value) => {\n    return { type: SET_SORT_COLUMN, value };\n}\n\nexport const searchBarVisible = (value) => {\n    return { type: SEARCH_BAR_VISIBLE, value };\n}\n\nexport const makeSearch = (value) => {\n    return { type: SEARCH_VALUE, value };\n}\n\n// Thunked actions (async)\nexport const getMovies = () => dispatch => {\n    axios.get('https://myflix-mern.herokuapp.com/movies', {\n        headers: { Authorization: `Bearer ${localStorage.token}` }\n    })\n        .then(response => response.data)\n        .then(movies => {\n            dispatch(setMovies(movies))\n        })\n        .catch(err => {\n            console.error(err);\n        });\n}\n\nexport const addMovieToFavorites = (movieId) => dispatch => {\n    axios.post(`https://myflix-mern.herokuapp.com/users/${JSON.parse(localStorage.user).Username}/movies/${movieId}`, {}, {\n        headers: { Authorization: `Bearer ${localStorage.token}` }\n    })\n        .then(response => response.data)\n        .then(user => {\n            dispatch(setUser(user));\n        })\n        .catch(err => {\n            console.error(err);\n        });\n}\n\nexport const removeMovieFromFavorites = (movieId) => dispatch => {\n    axios.delete(`https://myflix-mern.herokuapp.com/users/${JSON.parse(localStorage.user).Username}/movies/${movieId}`, {\n        headers: { Authorization: `Bearer ${localStorage.token}` }\n    })\n        .then(response => response.data)\n        .then(user => {\n            dispatch(setUser(user));\n        })\n        .catch(err => {\n            console.error(err);\n        });\n}\n\nexport const deleteAccount = () => dispatch => {\n    axios.delete(`https://myflix-mern.herokuapp.com/users/${JSON.parse(localStorage.user).Username}`, {\n        headers: { Authorization: `Bearer ${localStorage.token}` }\n    })\n        .then(() => {\n            console.log('User deleted.');\n            dispatch(setUser(''));\n            window.open('/', '_self');\n        })\n        .catch(err => {\n            console.error(err);\n        });\n}\n\nexport const updateUser = (field, userInput, callback) => dispatch => {\n    const config = {};\n    config[field] = userInput;\n\n    axios.patch(`https://myflix-mern.herokuapp.com/users/${JSON.parse(localStorage.user).Username}/${field}`, config,\n        {\n            headers: { Authorization: `Bearer ${localStorage.token}` }\n        })\n        .then(response => response.data)\n        .then((user) => {\n            dispatch(setUser(user));\n            callback();\n        })\n        .catch(err => {\n            console.error(err);\n        });\n}\n\nexport const loginUser = (username, password) => dispatch => {\n    axios.post('https://myflix-mern.herokuapp.com/login/', {\n        Username: username,\n        Password: password\n    })\n        .then(response => response.data)\n        .then((response) => {\n            dispatch(setUser(response.user));\n            localStorage.setItem('token', response.token);\n            dispatch(getMovies(response.token));\n        })\n        .catch(err => {\n            console.error(err, 'No such user.')\n        });\n};","import { combineReducers } from 'redux';\n\nimport { SET_MOVIES, SORT_AZ, SORT_ZA, SORT_DIRECTOR, SORT_GENRE, SORT_ID, SET_USER, SEARCH_BAR_VISIBLE, SEARCH_VALUE } from '../actions/actions.js';\n\n\nfunction movies(state = [], action) {\n    switch (action.type) {\n        case SET_MOVIES: // Sets the movies and sorts by id by default\n                return [...action.value].sort((a, b) => {\n                    if (a._id.toUpperCase() < b._id.toUpperCase()) {\n                        return -1;\n                    } if (a._id.toUpperCase() > b._id.toUpperCase()) {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                });\n        case SORT_AZ:\n            return [...state].sort((a, b) => {\n                if (a.Title.toUpperCase() < b.Title.toUpperCase()) {\n                    return -1;\n                } if (a.Title.toUpperCase() > b.Title.toUpperCase()) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n        case SORT_ZA:\n            return [...state].sort((a, b) => {\n                if (a.Title.toUpperCase() > b.Title.toUpperCase()) {\n                    return -1;\n                } if (a.Title.toUpperCase() < b.Title.toUpperCase()) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n        case SORT_DIRECTOR:\n            return [...state].sort((a, b) => {\n                if (a.Director.Name.toUpperCase() < b.Director.Name.toUpperCase()) {\n                    return -1;\n                } if (a.Director.Name.toUpperCase() > b.Director.Name.toUpperCase()) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n        case SORT_GENRE:\n            return [...state].sort((a, b) => {\n                if (a.Genre.Name.toUpperCase() < b.Genre.Name.toUpperCase()) {\n                    return -1;\n                } if (a.Genre.Name.toUpperCase() > b.Genre.Name.toUpperCase()) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n        case SORT_ID:\n            return [...state].sort((a, b) => {\n                if (a._id.toUpperCase() < b._id.toUpperCase()) {\n                    return -1;\n                } if (a._id.toUpperCase() > b._id.toUpperCase()) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n        default:\n            return state;\n    }\n}\n\nfunction user(state = '', action) {\n    switch (action.type) {\n        case SET_USER:\n            return action.newValue;\n        default:\n            return state;\n    }\n}\n\nfunction searchBarVisible(state = false, action) {\n    switch (action.type) {\n        case SEARCH_BAR_VISIBLE:\n            return action.value;\n        default:\n            return state;\n    }\n}\n\nfunction searchValue(state = '', action) {\n    switch (action.type) {\n        case SEARCH_VALUE:\n            return action.value;\n        default:\n            return state;\n    }\n}\n\n\nconst moviesApp = combineReducers({\n    movies,\n    user,\n    searchBarVisible,\n    searchValue\n});\n\nexport default moviesApp;","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  setUser,\n  setMovies,\n  makeSearch,\n  sortAZ,\n  sortZA,\n  sortDirector,\n  sortGenre,\n  sortId\n} from \"../../actions/actions.js\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport \"./nav-bar.scss\";\n\nfunction NavBar(props) {\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  if (props.searchBarVisible) {\n    return (\n      <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\">\n        <Nav>\n          <Link\n            className=\"nav-link\"\n            to=\"/\"\n            onClick={() => {\n              props.makeSearch(\"\");\n              setSearchInput(\"\");\n              props.sortId();\n            }}\n          >\n            Home\n          </Link>\n          <Link className=\"nav-link\" to=\"/profile\">\n            Profile\n          </Link>\n          <Form\n            onSubmit={e => {\n              e.preventDefault();\n              props.makeSearch(searchInput);\n            }}\n          >\n            <Form.Control\n              className=\"search-bar\"\n              value={searchInput}\n              onChange={e => setSearchInput(e.target.value)}\n            />\n          </Form>\n          <Dropdown>\n            <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-sort\">\n              Sort\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item onClick={() => props.sortAZ()}>\n                Sort A-Z\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => props.sortZA()}>\n                Sort Z-A\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => props.sortDirector()}>\n                Sort by Director\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => props.sortGenre()}>\n                Sort by Genre\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <Button\n            id=\"log-out\"\n            variant=\"secondary\"\n            size=\"sm\"\n            onClick={() => {\n              props.setUser(\"\");\n              props.setMovies([]);\n              window.open(\"/\", \"_self\");\n            }}\n          >\n            Log Out\n          </Button>\n        </Nav>\n      </Navbar>\n    );\n  } else {\n    return (\n      <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\">\n        <Nav>\n          <Link\n            className=\"nav-link\"\n            to=\"/\"\n            onClick={() => {\n              props.makeSearch(\"\");\n              setSearchInput(\"\");\n              props.sortId();\n            }}\n          >\n            Home\n          </Link>\n          <Link className=\"nav-link\" to=\"/profile\">\n            Profile\n          </Link>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { searchBarVisible } = state;\n  return {\n    searchBarVisible: searchBarVisible\n  };\n};\n\nconst mapDispatchToProps = {\n  setUser,\n  setMovies,\n  makeSearch,\n  sortAZ,\n  sortZA,\n  sortDirector,\n  sortGenre,\n  sortId\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavBar);\n","/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./movie-card.scss\";\nimport { Link } from \"react-router-dom\";\n\nexport function MovieCard(props) {\n  const { movie } = props;\n  return (\n    <Link\n      to={`/movies/${movie._id}`}\n      style={{ color: \"black\", textDecoration: \"none\" }}\n    >\n      <Card variant=\"link\">\n        <Card.Img variant=\"top\" src={movie.ImagePath} />\n        <Card.Body>\n          <Card.Title>\n            {movie.Title}{\" \"}\n            {props.user.FavoriteMovies.indexOf(props.movie._id) > -1 ? (\n              <b className=\"is-favorite\">★</b>\n            ) : (\n              <b className=\"is-not-favorite\">★</b>\n            )}\n          </Card.Title>\n          <Card.Text>{movie.Description}</Card.Text>\n        </Card.Body>\n      </Card>\n    </Link>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    Title: PropTypes.string,\n    ImagePath: PropTypes.string,\n    Description: PropTypes.string\n  }).isRequired\n};\n\nconst mapStateToProps = state => {\n  const { user, movies } = state;\n  return {\n    user: user,\n    movies: movies\n  };\n};\n\nexport default connect(mapStateToProps)(MovieCard);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { searchBarVisible } from '../../actions/actions.js';\nimport MovieCard from '../movie-card/movie-card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\n\n\nfunction MoviesList(props) {\n    const { searchValue, movies } = props;\n\n    useEffect(() => {\n        props.searchBarVisible(true);\n\n        return function cleanup() {\n            props.searchBarVisible(false);\n        }\n    });\n\n    const moviesToShow = () => {\n        if (searchValue.length > 0) {\n            return movies.filter(movie => (movie.Title.toLowerCase().includes(searchValue.toLocaleLowerCase())) || (movie.Genre.Name.toLowerCase().includes(searchValue.toLocaleLowerCase())) || (movie.Director.Name.toLowerCase().includes(searchValue.toLocaleLowerCase())))\n        } else {\n            return movies;\n        }\n    }\n\n    if (!movies) {\n        return <div className='main-view' />\n    } else {\n        return <Container className='movies-list'>\n            {moviesToShow()[0] || !searchValue ?\n                <Row>{moviesToShow().map(movie => <Col key={movie._id} xl={3} sm={6} md={4} xs={12}> <MovieCard movie={movie} /></Col>)}</Row> :\n                <Row><Col><Alert variant='danger'>Your search returned no results.</Alert></Col></Row>\n            }\n        </Container>\n    }\n\n}\n\n\nconst mapStateToProps = state => {\n    const { movies, searchValue } = state;\n\n    return {\n        movies: movies,\n        searchValue: searchValue\n    };\n}\n\n\nexport default connect(mapStateToProps, { searchBarVisible })(MoviesList);","/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/actions.js';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Link } from 'react-router-dom';\nimport './login-view.scss';\n\n\nexport function LoginView(props) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    return (\n        <Container className='login-view'>\n            <h1>Login</h1>\n            <Form >\n                <Form.Group controlId='formUsername'>\n                    <Form.Label>Username:</Form.Label>\n                    <Form.Control size='sm' type='text' placeholder='Username' value={username} onChange={e => setUsername(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='formPassword'>\n                    <Form.Label>Password:</Form.Label>\n                    <Form.Control size='sm' type='password' placeholder='Password' value={password} onChange={e => setPassword(e.target.value)} />\n                </Form.Group>\n                <Button variant='primary' onClick={() => props.loginUser(username, password)}>Submit</Button>\n                <Form.Group controlId='formNewUser'>\n                    <Form.Text>New user? Click <Link to={`/register`}>here</Link> to register</Form.Text>\n                </Form.Group>\n            </Form>\n        </Container>\n    );\n}\n\nLoginView.propTypes = {\n    loginUser: PropTypes.func.isRequired\n}\n\nexport default connect(null, { loginUser })(LoginView)","/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addMovieToFavorites, removeMovieFromFavorites } from '../../actions/actions.js';\nimport './movie-view.scss';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\n\nfunction MovieView(props) {\n\n    const { movies, movieId } = props;\n    if (!movies || !movies.length) return null;\n    const movie = movies.find(movie => movie._id == movieId);\n\n    return (\n        <div className='movie-view'>\n            <div className='movie-title'>\n                <h2 className='label'>Title</h2>\n                <p className='value'>{movie.Title}\n                    {\n                        props.user.FavoriteMovies.indexOf(movie._id) > -1 ?\n                            <Button variant='danger' onClick={() => props.removeMovieFromFavorites(movieId)}>Remove from favorite</Button> :\n                            <Button variant='primary' onClick={() => props.addMovieToFavorites(movieId)}>Add to favorite</Button>\n                    }\n                </p>\n            </div>\n            <div className='movie-description'>\n                <h3 className='label'>Description</h3>\n                <p className='value'>{movie.Description}</p>\n            </div>\n            <div className='movie-genre'>\n                <h3 className='label'>Genre</h3>\n                <p className='value'><Link to={`/genre/${movie.Genre.Name}`}>{movie.Genre.Name}</Link></p>\n            </div>\n            <div className='movie-director'>\n                <h3 className='label'>Director</h3>\n                <p className='value'><Link to={`/director/${movie.Director.Name}`}>{movie.Director.Name}</Link></p>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    const { user, movies } = state;\n    return {\n        user: user,\n        movies: movies\n    };\n}\n\nexport default connect(mapStateToProps, { addMovieToFavorites, removeMovieFromFavorites })(MovieView);","/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Link } from 'react-router-dom';\nimport './registration-view.scss';\nimport axios from 'axios';\n\nexport function RegistrationView(props) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [birthday, setBirthday] = useState('');\n\n    const registerNewUser = () => {\n        axios.post('https://myflix-mern.herokuapp.com/users', {\n            Username: username,\n            Password: password,\n            Email: email,\n            Birthday: birthday\n        })\n        .then(() => {\n            window.open('/', '_self');\n        })\n        .catch(err => {\n            console.error('error registering the user: ', err);\n        });\n    }\n\n    return (\n        <Container className='registration-view'>\n        <h1>Register</h1>\n            <Form>\n                <Form.Group controlId='formNewUsername'>\n                    <Form.Label>Username:</Form.Label>\n                    <Form.Control size='sm' type='text' placeholder='Your username' value={username} onChange={e => setUsername(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='formNewPassword'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control size='sm' type='password' placeholder='Your password' value={password} onChange={e => setPassword(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='formNewEmail'>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control size='sm' type='email' placeholder='your@email.com' value={email} onChange={e => setEmail(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='formNewBirthday'>\n                    <Form.Label>Birthday</Form.Label>\n                    <Form.Control size='sm' type='date' placeholder='MM/DD/YYYY' value={birthday} onChange={e => setBirthday(e.target.value)} />\n                </Form.Group>\n                <Button variant='primary' onClick={registerNewUser}>Register</Button>\n                <Form.Group controlId='formNewUser'>\n                    <Form.Text>Already registered? Click <Link to={'/'}>here</Link> to login</Form.Text>\n                </Form.Group>\n            </Form>\n        </Container>\n    );\n}\n\nRegistrationView.propTypes = {\n    username: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    birthday: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    userRegistered: PropTypes.func.isRequired\n}","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./genre-view.scss\";\nimport axios from \"axios\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nexport function GenreView(props) {\n  const [genre, setGenre] = useState(\"\");\n\n  useEffect(() => {\n    function getGenreInfo() {\n      axios\n        .get(`https://myflix-mern.herokuapp.com/genres/${props.genre}`, {\n          headers: { Authorization: `Bearer ${localStorage.token}` }\n        })\n        .then(response => setGenre(response.data))\n        .catch(err => {\n          console.error(err);\n        });\n    }\n\n    getGenreInfo();\n  }, [props]);\n\n  return (\n    <Container className=\"genre-view\">\n      <Row>\n        <Col>\n          <div>\n            <h3 className=\"label\">Genre</h3>\n            <p className=\"value\">{props.genre}</p>\n          </div>\n          <div>\n            <h3 className=\"label\">Description</h3>\n            <p className=\"value\">{genre.Description}</p>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h3 className=\"label\">{props.genre} movies</h3>\n          <ListGroup className=\"movies-by-genre\">\n            {props.movies.map(movie => {\n              if (movie.Genre.Name === genre.Name) {\n                return (\n                  <ListGroup.Item key={movie._id}>\n                    {movie.Title}\n                    <Link to={`/movies/${movie._id}`}>\n                      {\" \"}\n                      <Button variant=\"primary\" size=\"sm\">\n                        View\n                      </Button>\n                    </Link>\n                  </ListGroup.Item>\n                );\n              } else {\n                return null;\n              }\n            })}\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  const { movies } = state;\n  return {\n    movies: movies\n  };\n};\n\nexport default connect(mapStateToProps)(GenreView);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./director-view.scss\";\nimport axios from \"axios\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nexport function DirectorView(props) {\n  const [director, setDirector] = useState(\"\");\n\n  useEffect(() => {\n    function getDirectorInfo() {\n      axios\n        .get(\n          `https://myflix-mern.herokuapp.com/directors/${props.directorName}`,\n          {\n            headers: { Authorization: `Bearer ${localStorage.token}` }\n          }\n        )\n        .then(response => setDirector(response.data))\n        .catch(err => {\n          console.error(err);\n        });\n    }\n\n    getDirectorInfo();\n  }, []);\n\n  return (\n    <Container className=\"director-view\">\n      <Row>\n        <Col>\n          <div>\n            <h3 className=\"label\">Director</h3>\n            <p className=\"value\">{props.directorName}</p>\n          </div>\n          <div>\n            <h3 className=\"label\">Bio</h3>\n            <p className=\"value\">{director.Bio}</p>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h3 className=\"label\">Movies by {props.directorName}</h3>\n          <ListGroup className=\"movies-by-director\">\n            {props.movies.map(movie => {\n              if (movie.Director.Name === director.Name) {\n                return (\n                  <ListGroup.Item key={movie._id}>\n                    {movie.Title}\n                    <Link to={`/movies/${movie._id}`}>\n                      {\" \"}\n                      <Button variant=\"primary\" size=\"sm\">\n                        View\n                      </Button>\n                    </Link>\n                  </ListGroup.Item>\n                );\n              } else {\n                return null;\n              }\n            })}\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  const { movies } = state;\n  return {\n    movies: movies\n  };\n};\n\nexport default connect(mapStateToProps)(DirectorView);\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Form from \"react-bootstrap/Form\";\n\nexport function ChangePassword(props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [oldPassword, setOldpassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [newPasswordRepeat, setNewPasswordRepeat] = useState(\"\");\n\n  function submitChange(oldPassword, newPassword) {\n    axios\n      .patch(\n        `https://myflix-mern.herokuapp.com/users/${\n          props.user.Username\n        }/Password`,\n        {\n          OldPassword: `${oldPassword}`,\n          NewPassword: `${newPassword}`\n        },\n        {\n          headers: { Authorization: `Bearer ${localStorage.token}` }\n        }\n      )\n      .then(response => {\n        console.log(\"Password change succeeded\");\n        resetUserInput();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n  function toggleCollapse() {\n    setIsOpen(!isOpen);\n  }\n\n  function resetUserInput() {\n    setIsOpen(null);\n    setOldpassword(\"\");\n    setNewPassword(\"\");\n    setNewPasswordRepeat(\"\");\n  }\n\n  return (\n    <>\n      <Button onClick={() => toggleCollapse()} variant=\"secondary\" size=\"sm\">\n        Edit\n      </Button>\n      <Collapse in={isOpen}>\n        <Form>\n          <Form.Control\n            type={props.type}\n            value={oldPassword}\n            placeholder={`Enter current ${props.field}`}\n            onChange={e => setOldpassword(e.target.value)}\n          />\n          <Form.Control\n            type={props.type}\n            value={newPassword}\n            placeholder={`Enter new ${props.field}`}\n            onChange={e => setNewPassword(e.target.value)}\n          />\n          <Form.Control\n            type={props.type}\n            value={newPasswordRepeat}\n            placeholder={`Repeat new ${props.field}`}\n            onChange={e => setNewPasswordRepeat(e.target.value)}\n          />\n          {newPassword === newPasswordRepeat &&\n          newPassword !== \"\" &&\n          oldPassword !== \"\" ? (\n            <Button\n              variant=\"primary\"\n              size=\"sm\"\n              onClick={() => submitChange(oldPassword, newPassword)}\n            >\n              Submit\n            </Button>\n          ) : (\n            <Button variant=\"secondary\" size=\"sm\">\n              Submit\n            </Button>\n          )}\n        </Form>\n      </Collapse>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Form from \"react-bootstrap/Form\";\n\nexport function EditProfile(props) {\n  const [isOpen, setIsOpen] = useState(null);\n  const [userInput, setUserInput] = useState(\"\");\n\n  function toggleCollapse() {\n    setIsOpen(!isOpen);\n  }\n\n  function resetUserInput() {\n    setIsOpen(null);\n    setUserInput(\"\");\n  }\n\n  return (\n    <>\n      <Button onClick={() => toggleCollapse()} variant=\"secondary\" size=\"sm\">\n        Edit\n      </Button>\n      <Collapse in={isOpen}>\n        <Form>\n          <Form.Control\n            type={props.type}\n            value={userInput}\n            placeholder={`Enter ${props.field}`}\n            onChange={e => setUserInput(e.target.value)}\n          />\n          <Button\n            variant=\"primary\"\n            size=\"sm\"\n            onClick={() =>\n              props.updateUser(props.field, userInput, () => resetUserInput())\n            }\n          >\n            Submit\n          </Button>\n        </Form>\n      </Collapse>\n    </>\n  );\n}\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  removeMovieFromFavorites,\n  deleteAccount,\n  setUser,\n  updateUser\n} from \"../../actions/actions.js\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { ChangePassword } from \"./change-password\";\nimport { EditProfile } from \"./edit-profile\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./profile-view.scss\";\n\nexport function ProfileView(props) {\n  if (!localStorage.user) {\n    return <Redirect to=\"/\" />;\n  } else if (!props.user) {\n    return null;\n  } else {\n    return (\n      <Container className=\"profile-view\">\n        <Row>\n          <Col>\n            <h2>User profile</h2>\n            <div className=\"user-username\">\n              <h3 className=\"label\">Username</h3>\n              <span className=\"value\">\n                {props.user.Username}{\" \"}\n                <EditProfile\n                  type={\"Username\"}\n                  field={\"Username\"}\n                  user={props.user}\n                  updateUser={props.updateUser}\n                />\n              </span>\n            </div>\n            <div className=\"user-password\">\n              <h3 className=\"label\">Password</h3>\n              <span className=\"value\">\n                ********{\" \"}\n                <ChangePassword\n                  type={\"Password\"}\n                  field={\"Password\"}\n                  user={props.user}\n                  updateUser={props.updateUser}\n                />\n              </span>\n            </div>\n            <div className=\"user-email\">\n              <h3 className=\"label\">Email</h3>\n              <span className=\"value\">\n                {props.user.Email}{\" \"}\n                <EditProfile\n                  type={\"Email\"}\n                  field={\"Email\"}\n                  user={props.user}\n                  updateUser={props.updateUser}\n                />\n              </span>\n            </div>\n            <div className=\"user-birthday\">\n              <h3 className=\"label\">Birthday</h3>\n              <span className=\"value\">\n                {props.user.Birthday}{\" \"}\n                <EditProfile\n                  type={\"Date\"}\n                  field={\"Birthday\"}\n                  user={props.user}\n                  updateUser={props.updateUser}\n                />\n              </span>\n            </div>\n            <div className=\"user-delete-account\">\n              <Button\n                onClick={() => props.deleteAccount()}\n                variant=\"danger\"\n                size=\"sm\"\n              >\n                Delete account\n              </Button>\n              <br />\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h3 className=\"label\">Favorite Movies</h3>\n            <ListGroup className=\"user-favorite-movies\">\n              {props.movies.map(mov => {\n                if (\n                  mov._id ===\n                  props.user.FavoriteMovies.find(favMov => favMov === mov._id)\n                ) {\n                  return (\n                    <ListGroup.Item key={mov._id}>\n                      {mov.Title}\n                      <Link to={`/movies/${mov._id}`}>\n                        {\" \"}\n                        <Button variant=\"primary\" size=\"sm\">\n                          View\n                        </Button>\n                      </Link>{\" \"}\n                      <Button\n                        variant=\"danger\"\n                        size=\"sm\"\n                        onClick={() => props.removeMovieFromFavorites(mov._id)}\n                      >\n                        Remove\n                      </Button>\n                    </ListGroup.Item>\n                  );\n                } else {\n                  return null;\n                }\n              })}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user, movies } = state;\n  return {\n    user: user,\n    movies: movies\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { removeMovieFromFavorites, deleteAccount, setUser, updateUser }\n)(ProfileView);\n","/* eslint-disable no-console */\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { setUser, getMovies } from \"../../actions/actions.js\";\nimport NavBar from \"../nav-bar/nav-bar\";\nimport MoviesList from \"../movies-list/movies-list\";\nimport LoginView from \"../login-view/login-view\";\nimport MovieView from \"../movie-view/movie-view\";\nimport { RegistrationView } from \"../registration-view/registration-view\";\nimport GenreView from \"../genre-view/genre-view\";\nimport DirectorView from \"../director-view/director-view\";\nimport ProfileView from \"../profile-view/profile-view\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"./main-view.scss\";\n\nexport function MainView(props) {\n  const { user } = props;\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"token\");\n    if (accessToken !== null) {\n      props.setUser(JSON.parse(localStorage.user));\n      props.getMovies(accessToken);\n    }\n  }, []);\n\n  if (!user) {\n    return (\n      <Router>\n        <Container className=\"main-view\" fluid=\"true\">\n          <Row>\n            <Route exact path=\"/\" render={() => <LoginView />} />\n            <Route path=\"/register\" render={() => <RegistrationView />} />\n            <Route path=\"/profile\" render={() => <Redirect to=\"/\" />} />\n          </Row>\n        </Container>\n      </Router>\n    );\n  } else {\n    return (\n      <Router>\n        <NavBar />\n        <Container className=\"main-view\" fluid=\"true\">\n          <Row>\n            <Route exact path=\"/\" render={() => <MoviesList />} />\n            <Route path=\"/profile\" render={() => <ProfileView />} />\n            <Route\n              path=\"/movies/:Id\"\n              render={({ match }) => (\n                <Col>\n                  <MovieView movieId={match.params.Id} />\n                </Col>\n              )}\n            />\n            <Route\n              path=\"/genre/:Genre\"\n              render={({ match }) => <GenreView genre={match.params.Genre} />}\n            />\n            <Route\n              path=\"/director/:Director\"\n              render={({ match }) => (\n                <DirectorView directorName={match.params.Director} />\n              )}\n            />\n          </Row>\n        </Container>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user } = state;\n  return {\n    user: user\n  };\n};\n\nconst mapDispatchToProps = {\n  setUser,\n  getMovies\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainView);\n","import React, { Component } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport moviesApp from './reducers/reducers.js';\nimport MainView from './components/main-view/main-view.jsx';\nimport './App.css';\n\nconst store = createStore(\n  moviesApp, \n  applyMiddleware(thunk)\n);\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MainView />\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}